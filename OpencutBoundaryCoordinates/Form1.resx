<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABXV1cGAAAAAFdXV2QAAAAAV1dXZAAAAAAAAAAAAAAAAFdX
        V/9XV1f/V1dX/1dXV/9XV1f/V1dX/1dXV9UAAAAAAAAAAFdXV2QAAAAAAAAAAFdXV2QAAAAAAAAAAAAA
        AAAAAAAAV1dX/1dXV/9XV1f/V1dX/wAAAABXV1dkV1dX1VdXV2QAAAAAAAAAAAAAAAAAAAAAV1dXZAAA
        AAAAAAAAAAAAAFdXV05XV1f/V1dX/1dXV04AAAAAAAAAAFdXV2RXV1fVV1dXZAAAAAAAAAAAAAAAAFdX
        V2QAAAAAAAAAAAAAAABXV1cfV1dXY1dXVy1XV1cfAAAAAAAAAAAAAAAAAAAAAFdXV2RXV1fVV1dXmwAA
        AAAAAAAAV1dXZAAAAAAAAAAAAAAAAFdXVytXV1dOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFdX
        V2RXV1fVV1dXm1dXV2QAAAAAAAAAAAAAAABXV1dOV1dXHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFdXV2RXV1fVV1dXZAAAAAAAAAAAV1dXG1dXV04AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFdXV2RXV1fVV1dXZFdXV04AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFdXV2RXV1fVV1dXZAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA//8AAP//AAD//wAA//8AAP/AAAB/4QAAv/MAAN//AADz/wAA/P8AAP9/AAD/3wAA//cAAP//
        AAD//wAA//8AAA==
</value>
  </data>
</root>